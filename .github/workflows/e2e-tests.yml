name: Run End-To-End Tests

on:
  pull_request:

# Ensures that only a single workflow per PR will run at a time. Cancels in-progress jobs if new commit is pushed.
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test-conformance:
    name: test-conformance
    runs-on: [self-hosted, linux]
    steps:
      # Install and setup go
      - name: Set up Go 1.21
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: checkout interchaintest
        uses: actions/checkout@v3

      # cleanup environment on self-hosted test runner
      - name: clean
        run: |-
          rm -rf ~/.interchaintest

      # run tests
      - name: run conformance tests
        run: (go test -race -timeout 30m -failfast -v -p 2 ./cmd/interchaintest) || (echo "\n\n*****CHAIN and RELAYER LOGS*****" && cat "$HOME/.interchaintest/logs/interchaintest.log" && exit 1)
  test-ibc-examples:
    name: test-ibc-examples
    runs-on: [self-hosted, linux]
    steps:
      # Install and setup go
      - name: Set up Go 1.21
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: false

      - name: checkout interchaintest
        uses: actions/checkout@v3

      # cleanup environment on self-hosted test runner
      - name: clean
        run: |-
          rm -rf ~/.interchaintest

      # run tests
      - name: run example ibc tests
        run: go test -race -timeout 30m -failfast -v -p 2 ./examples/ibc
  test-cosmos-examples:
    name: test-cosmos-examples
    runs-on: [self-hosted, linux]
    steps:
      # Install and setup go
      - name: Set up Go 1.21
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: false

      - name: checkout interchaintest
        uses: actions/checkout@v3

      # cleanup environment on self-hosted test runner
      - name: clean
        run: |-
          rm -rf ~/.interchaintest

      # run tests
      - name: run example cosmos tests
        run: go test -race -failfast -timeout 30m -v -p 2 ./examples/cosmos
